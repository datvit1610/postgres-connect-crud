spring.datasource.url=jdbc:postgresql://localhost:5432/product_management
spring.datasource.username=postgres
spring.datasource.password=datVit.123
spring.jpa.show-sql=true

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update
#
# Hikari will use the above plus the following to setup connection pooling
spring.datasource.hikari.minimumIdle=5
spring.datasource.hikari.maximumPoolSize=20
spring.datasource.hikari.idleTimeout=30000
spring.datasource.hikari.poolName=SpringBootJPAHikariCP
spring.datasource.hikari.maxLifetime=2000000
spring.datasource.hikari.connectionTimeout=30000
######################
#
## JPA specific configs
#spring.jpa.properties.hibernate.show_sql=true
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.properties.hibernate.use_sql=true
#spring.jpa.properties.hibernate.id.new_generator_mappings=false
#spring.jpa.properties.hibernate.default_schema=product_management
#spring.jpa.properties.hibernate.search.autoregister_listeners=false
#spring.jpa.properties.hibernate.bytecode.use_reflection_optimizer=false
